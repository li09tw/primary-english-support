{
  "version": 3,
  "sources": ["../bundle-YPS4vm/checked-fetch.js", "../../../functions/api-gateway.js", "../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-YPS4vm/middleware-insertion-facade.js", "../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-YPS4vm/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/zorawl/Documents/GitHub/primary-english-support/.wrangler/tmp/dev-S6Unic",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// Cloudflare Worker API Gateway for Vercel\n// \u9019\u500B Worker \u4F5C\u70BA D1 \u548C R2 \u7684 API \u9598\u9053\n\nexport default {\n  async fetch(request, env, ctx) {\n    // 0. \u8655\u7406 CORS \u9810\u6AA2\u8ACB\u6C42\uFF08\u5FC5\u9808\u5728\u6700\u524D\u9762\uFF09\n    if (request.method === \"OPTIONS\") {\n      return new Response(null, {\n        status: 200,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n          \"Access-Control-Allow-Headers\":\n            \"Content-Type, X-API-Key, Authorization\",\n          \"Access-Control-Max-Age\": \"86400\",\n        },\n      });\n    }\n\n    // 1. \u5B89\u5168\u6027\uFF1A\u6AA2\u67E5 API \u5BC6\u9470\n    const authKey = request.headers.get(\"X-API-Key\");\n    if (authKey !== env.API_SECRET) {\n      return new Response(\"Unauthorized\", {\n        status: 401,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n          \"Access-Control-Allow-Headers\":\n            \"Content-Type, X-API-Key, Authorization\",\n        },\n      });\n    }\n\n    // 2. \u8DEF\u7531\uFF1A\u6839\u64DA\u8DEF\u5F91\u6C7A\u5B9A\u64CD\u4F5C\n    const url = new URL(request.url);\n\n    // \u8655\u7406 D1 \u67E5\u8A62\n    if (url.pathname === \"/query\" && request.method === \"POST\") {\n      try {\n        const { query, params } = await request.json();\n        console.log(\"\uD83D\uDD0D D1 Query:\", { query, params });\n\n        const stmt = env.PRIMARY_ENGLISH_DB.prepare(query).bind(\n          ...(params || [])\n        );\n        const data = await stmt.all();\n\n        console.log(\"\uD83D\uDCCA D1 Response:\", {\n          success: true,\n          results: data.results,\n          meta: data.meta,\n        });\n\n        return new Response(\n          JSON.stringify({\n            success: true,\n            results: data.results,\n            meta: data.meta,\n          }),\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n              \"Access-Control-Allow-Headers\":\n                \"Content-Type, X-API-Key, Authorization\",\n            },\n          }\n        );\n      } catch (e) {\n        console.error(\"\u274C D1 Query Error:\", e);\n        return new Response(\n          JSON.stringify({\n            success: false,\n            error: e.message,\n          }),\n          {\n            status: 500,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n              \"Access-Control-Allow-Headers\":\n                \"Content-Type, X-API-Key, Authorization\",\n            },\n          }\n        );\n      }\n    }\n\n    // \u8655\u7406 D1 \u63D2\u5165/\u66F4\u65B0/\u522A\u9664\n    if (url.pathname === \"/execute\" && request.method === \"POST\") {\n      try {\n        const { query, params } = await request.json();\n        const stmt = env.PRIMARY_ENGLISH_DB.prepare(query).bind(\n          ...(params || [])\n        );\n        const result = await stmt.run();\n        return new Response(JSON.stringify(result), {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n            \"Access-Control-Allow-Headers\":\n              \"Content-Type, X-API-Key, Authorization\",\n          },\n        });\n      } catch (e) {\n        return new Response(JSON.stringify({ error: e.message }), {\n          status: 500,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n            \"Access-Control-Allow-Headers\":\n              \"Content-Type, X-API-Key, Authorization\",\n          },\n        });\n      }\n    }\n\n    // \u8655\u7406 R2 \u64CD\u4F5C - \u7372\u53D6\u7269\u4EF6\n    if (url.pathname.startsWith(\"/storage/\") && request.method === \"GET\") {\n      const objectKey = url.pathname.replace(\"/storage/\", \"\");\n      const object = await env.primary_english_storage.get(objectKey);\n\n      if (object === null) {\n        return new Response(\"Object Not Found\", { status: 404 });\n      }\n\n      const headers = new Headers();\n      object.writeHttpMetadata(headers);\n      headers.set(\"etag\", object.httpEtag);\n      headers.set(\"Access-Control-Allow-Origin\", \"*\");\n\n      return new Response(object.body, { headers });\n    }\n\n    // \u8655\u7406 R2 \u64CD\u4F5C - \u4E0A\u50B3\u7269\u4EF6\n    if (url.pathname.startsWith(\"/storage/\") && request.method === \"PUT\") {\n      const objectKey = url.pathname.replace(\"/storage/\", \"\");\n      const body = await request.arrayBuffer();\n\n      try {\n        await env.primary_english_storage.put(objectKey, body, {\n          httpMetadata: {\n            contentType:\n              request.headers.get(\"content-type\") || \"application/octet-stream\",\n          },\n        });\n\n        return new Response(JSON.stringify({ success: true, key: objectKey }), {\n          status: 200,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n            \"Access-Control-Allow-Headers\":\n              \"Content-Type, X-API-Key, Authorization\",\n          },\n        });\n      } catch (e) {\n        return new Response(JSON.stringify({ error: e.message }), {\n          status: 500,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n            \"Access-Control-Allow-Headers\":\n              \"Content-Type, X-API-Key, Authorization\",\n          },\n        });\n      }\n    }\n\n    // \u8655\u7406 R2 \u64CD\u4F5C - \u522A\u9664\u7269\u4EF6\n    if (url.pathname.startsWith(\"/storage/\") && request.method === \"DELETE\") {\n      const objectKey = url.pathname.replace(\"/storage/\", \"\");\n\n      try {\n        await env.primary_english_storage.delete(objectKey);\n\n        return new Response(JSON.stringify({ success: true, key: objectKey }), {\n          status: 200,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n            \"Access-Control-Allow-Headers\":\n              \"Content-Type, X-API-Key, Authorization\",\n          },\n        });\n      } catch (e) {\n        return new Response(JSON.stringify({ error: e.message }), {\n          status: 500,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n            \"Access-Control-Allow-Headers\":\n              \"Content-Type, X-API-Key, Authorization\",\n          },\n        });\n      }\n    }\n\n    return new Response(\"Not Found\", { status: 404 });\n  },\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/zorawl/Documents/GitHub/primary-english-support/functions/api-gateway.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/zorawl/Documents/GitHub/primary-english-support/functions/api-gateway.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/zorawl/Documents/GitHub/primary-english-support/.wrangler/tmp/bundle-YPS4vm/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/zorawl/Documents/GitHub/primary-english-support/.wrangler/tmp/bundle-YPS4vm/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/zorawl/Documents/GitHub/primary-english-support/.wrangler/tmp/bundle-YPS4vm/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
